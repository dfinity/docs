<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc?>
<?asciidoc-numbered?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>Use the default cycles wallet</title>
<date>2021-08-05</date>
</info>
<simpara>As discussed in <link xl:href="concepts/tokens-cycles.xml">Tokens and cycles</link>, ICP tokens can be converted into <emphasis role="strong">cycles</emphasis> to power canister operations.
Cycles provide a largely stable value proposition and represent the operational cost of communication, computation, and storage that applications consume.
For example, cycles reflect the actual cost of physical hardware, rack space, energy, storage devices, and network bandwidth required by applications running on the Internet Computer.</simpara>
<simpara>Unlike ICP tokens, cycles are only associated with canisters and not user or developer principals.
Because only canisters require and consume cycles—to perform operations and to pay for the resources they use—users and developers manage the distribution and ownership of cycles through a special type of canister called a <emphasis role="strong">cycles wallet</emphasis>. Because the cycles wallet holds the cycles required to perform operations such as creating new canisters, these operations are executed by default using the canister identifier for the cycles wallet instead of your user principal.</simpara>
<simpara>For the purposes of local development, the {sdk-short-name} automatically creates a default cycles wallet for you in every project and most of the operations performed using the cycles wallet happen behind the scenes.
For example, the cycles wallet acts on your behalf to register canister identifiers and deploy canisters on the local network.</simpara>
<simpara>In a production environment, however, you often need to explicitly register and transfer cycles to new canisters, specify the principals that can act as custodians, and manage the principals with ownership rights.
You can perform some of these tasks using the default cycles wallet application running in a web browser.
Depending on the specific action you want to take, you can also perform these cycle and canister management tasks by running <literal>dfx wallet</literal> commands in a terminal or by calling methods in the default cycles wallet canister directly.</simpara>
<simpara>You should keep in mind, however, that calls to the cycles wallet canister are executed using the cycles wallet identifier associated with the currently-selected user identity.
Depending on your currently-selected identity and whether the principal associated with that identity has been added as a controller or a custodian for a wallet, you might see different results or be denied access to a specific method.</simpara>
<simpara>To check the identity you are currently using, run the following command:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx identity whoami</programlisting>
<section xml:id="_controller_and_custodian_roles">
<title>Controller and custodian roles</title>
<simpara>A user principal or canister identifier can be assigned to a <emphasis role="strong">controller</emphasis> or <emphasis role="strong">custodian</emphasis> role.</simpara>
<simpara>A <emphasis role="strong">controller</emphasis> is the most privileged role and a principal assigned to the controller role can perform privileged tasks including the following:</simpara>
<itemizedlist>
<listitem>
<simpara>Add and remove other principals as controllers.</simpara>
</listitem>
<listitem>
<simpara>Authorize and de-authorize other principals as custodians.</simpara>
</listitem>
<listitem>
<simpara>Add entries to the cycles wallet address book.</simpara>
</listitem>
<listitem>
<simpara>Access the cycles wallet balance and all other wallet-related information.</simpara>
</listitem>
<listitem>
<simpara>Send cycles to other canisters.</simpara>
</listitem>
<listitem>
<simpara>Receive cycles from other canisters.</simpara>
</listitem>
<listitem>
<simpara>Act as the "message-caller" principal in calls to other canisters.</simpara>
</listitem>
<listitem>
<simpara>Create canisters and additional cycles wallets.</simpara>
</listitem>
<listitem>
<simpara>Rename the cycles wallet.</simpara>
</listitem>
</itemizedlist>
<simpara>A principal assigned to the <emphasis role="strong">custodian</emphasis> role can only perform a subset of cycles wallet management tasks, including the following:</simpara>
<itemizedlist>
<listitem>
<simpara>Access the cycles wallet balance and all other wallet-related information.</simpara>
</listitem>
<listitem>
<simpara>Send cycles to other canisters.</simpara>
</listitem>
<listitem>
<simpara>Receive cycles from other canisters.</simpara>
</listitem>
<listitem>
<simpara>Act as the "message-caller" principal in calls to other canisters.</simpara>
</listitem>
<listitem>
<simpara>Create canisters.</simpara>
</listitem>
</itemizedlist>
<note>
<simpara>Authorizing a principal as a custodian does not automatically grant the principal access to a cycles wallet. The identity assigned to the custodian role must also be assigned a cycles wallet canister identifier. For example, if you authorize the identity <literal>alice_custodian</literal> as a custodian of a cycles wallet (<literal>rwlgt-iiaaa-aaaaa-aaaaa-cai</literal>) in a local project, that user would also need to be assigned to use that wallet with the <literal>dfx identity set-wallet rwlgt-iiaaa-aaaaa-aaaaa-cai</literal> command.</simpara>
</note>
</section>
<section xml:id="wallet-check-balance">
<title>Check the cycle balance</title>
<simpara>If you are doing local development, your cycles wallet is created when you register a new canister identifier using <literal>dfx canister create</literal> or when you register, build, and deploy a canister with <literal>dfx deploy</literal>.</simpara>
<simpara>If you are deploying on the Internet Computer, you typically create your cycles wallet by converting ICP tokens to cycles, transferring the cycles to a new canister identifier, and updating the canister with the default cycles wallet WebAssembly module (WASM).</simpara>
<simpara>After you have a cycles wallet on the local or remote network, you can use the  <literal>dfx wallet balance</literal> command or the <literal>wallet_balance</literal> method to check the current cycle balance.</simpara>
<section xml:id="_check_you_cycles_balance_when_developing_locally">
<title>Check you cycles balance when developing locally</title>
<simpara>If you are doing local development, you can use the  <literal>dfx wallet balance</literal> command to check the current cycles balance on a project-by-project basis.</simpara>
<simpara>To check the cycles balance in a local project:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Open a terminal and navigate to the root directory of the project.</simpara>
</listitem>
<listitem>
<simpara>Start the Internet Computer locally by running the following command:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx start --background</programlisting>
</listitem>
<listitem>
<simpara>Display the cycles balance from the cycles wallet associated with the currently-selected identity by running the following command:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx wallet balance</programlisting>
<simpara>The command displays output similar to the following:</simpara>
<literallayout class="monospaced">78000000000000 cycles.</literallayout>
</listitem>
</orderedlist>
</section>
<section xml:id="_check_the_cycles_balance_on_the_internet_computer">
<title>Check the cycles balance on the Internet Computer</title>
<simpara>If you have deployed a cycles wallet on the Internet Computer main network, you can use the  <literal>dfx wallet balance</literal> command to check the current cycles balance on the network.</simpara>
<simpara>To check the cycles balance on the Internet Computer:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Open a terminal and navigate to a directory that contains a <literal>dfx.json</literal> configuration file.</simpara>
</listitem>
<listitem>
<simpara>Check your connection to the Internet Computer by running the following command:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx ping ic</programlisting>
</listitem>
<listitem>
<simpara>Display the cycle balance from the cycles wallet associated with the currently-selected identity by running the following command:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx wallet --network ic balance</programlisting>
<simpara>The command displays output similar to the following:</simpara>
<literallayout class="monospaced">67991783875995 cycles.</literallayout>
</listitem>
</orderedlist>
</section>
<section xml:id="_call_the_cycles_wallet_balance_method">
<title>Call the cycles wallet_balance method</title>
<simpara>You can also check the cycles balance by calling the <literal>wallet_balance</literal> method in the cycles wallet canister directly.
For example, if your principal is a controller for the <literal>h5aet-waaaa-aaaab-qaamq-cai</literal> cycles wallet, you can check the current cycle balance by running the following command:</simpara>
<literallayout class="monospaced">dfx canister --network ic call h5aet-waaaa-aaaab-qaamq-cai wallet_balance</literallayout>
<simpara>The command returns the balance using Candid format as a record with an amount field (represented by the hash 3_573_748_184) and a balance of
6,895,656,625,450 cycles like this:</simpara>
<literallayout class="monospaced">(record { 3_573_748_184 = 6_895_656_625_450 })</literallayout>
</section>
</section>
<section xml:id="wallet-add-controller">
<title>Add a controller</title>
<simpara>If you are the controller of a cycles wallet, you can add other principals or canister identifiers to the controller role.
Adding a principal to the controller role also automatically adds the principal to the custodian role.</simpara>
<simpara>To add a controller to a cycles wallet in a local project:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Open a terminal and navigate to the root directory of the project.</simpara>
</listitem>
<listitem>
<simpara>Start the Internet Computer locally by running the following command:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx start --background</programlisting>
</listitem>
<listitem>
<simpara>Display the cycles balance from the cycles wallet associated with the currently-selected identity by running a command similar to the following:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx wallet add-controller &lt;controller-principal-identifier&gt;</programlisting>
<simpara>For example, you would run the following command to add the user represented by the principal identifier b5quc-npdph-l6qp4-kur4u-oxljq-7uddl-vfdo6-x2uo5-6y4a6-4pt6v-7qe as a controller of the local cycles wallet:</simpara>
<literallayout class="monospaced">dfx wallet add-controller b5quc-npdph-l6qp4-kur4u-oxljq-7uddl-vfdo6-x2uo5-6y4a6-4pt6v-7qe</literallayout>
<simpara>The command displays output similar to the following:</simpara>
<literallayout class="monospaced">Added b5quc-npdph-l6qp4-kur4u-oxljq-7uddl-vfdo6-x2uo5-6y4a6-4pt6v-7qe as a controller.</literallayout>
</listitem>
</orderedlist>
</section>
<section xml:id="wallet-get-controllers">
<title>List the current controllers</title>
<simpara>You can use the  <literal>dfx wallet controllers</literal> command or the <literal>get_controllers</literal> method to list the principals that have full control over a specified cycles wallet canister.</simpara>
<simpara>To list the controllers for a cycles wallet in a local project:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Open a terminal and navigate to the root directory of the project.</simpara>
</listitem>
<listitem>
<simpara>Start the Internet Computer locally by running the following command:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx start --background</programlisting>
</listitem>
<listitem>
<simpara>List the principal identifiers that have full control over the cycles wallet in the current project by running the following command:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx wallet controllers</programlisting>
<simpara>The command displays the textual representation of the principals that have control over the cycles wallet with output similar to the following:</simpara>
<literallayout class="monospaced">tsqwz-udeik-5migd-ehrev-pvoqv-szx2g-akh5s-fkyqc-zy6q7-snav6-uqe
b5quc-npdph-l6qp4-kur4u-oxljq-7uddl-vfdo6-x2uo5-6y4a6-4pt6v-7qe</literallayout>
</listitem>
</orderedlist>
</section>
<section xml:id="wallet-remove-controller">
<title>Remove a controller</title>
<simpara>You can use the  <literal>dfx wallet remove-controller</literal> command or the <literal>remove_controller</literal> method to remove a principal as a controller.</simpara>
<simpara>To remove a controller for a cycles wallet in a local project:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Open a terminal and navigate to the root directory of the project.</simpara>
</listitem>
<listitem>
<simpara>Start the Internet Computer locally by running the following command:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx start --background</programlisting>
</listitem>
<listitem>
<simpara>Specify the principal identifier to remove from the controller role in the current project by running a command similar to the following:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx wallet remove-controller b5quc-npdph-l6qp4-kur4u-oxljq-7uddl-vfdo6-x2uo5-6y4a6-4pt6v-7qe</programlisting>
<simpara>The command output similar to the following:</simpara>
<literallayout class="monospaced">Removed b5quc-npdph-l6qp4-kur4u-oxljq-7uddl-vfdo6-x2uo5-6y4a6-4pt6v-7qe as a controller.</literallayout>
</listitem>
</orderedlist>
</section>
<section xml:id="wallet-authorize">
<title>Authorize a custodian</title>
<simpara>You can use the  <literal>dfx wallet authorize</literal> command or the <literal>authorize</literal> method to authorize a principal as a custodian of a cycles wallet.</simpara>
<simpara>To authorize a principal as a custodian for the cycles wallet in a local project:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Open a terminal and navigate to the root directory of the project.</simpara>
</listitem>
<listitem>
<simpara>Start the Internet Computer locally by running the following command:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx start --background</programlisting>
</listitem>
<listitem>
<simpara>Specify the principal identifier to authorize as a custodian in the current project and for the current identity by running a command similar to the following:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx wallet authorize b5quc-npdph-l6qp4-kur4u-oxljq-7uddl-vfdo6-x2uo5-6y4a6-4pt6v-7qe</programlisting>
<simpara>The command output similar to the following:</simpara>
<literallayout class="monospaced">Authorized b5quc-npdph-l6qp4-kur4u-oxljq-7uddl-vfdo6-x2uo5-6y4a6-4pt6v-7qe as a custodian.</literallayout>
</listitem>
</orderedlist>
</section>
<section xml:id="wallet-get-custodian">
<title>List current custodians</title>
<simpara>You can use the  <literal>dfx wallet custodians</literal> command or the <literal>get_custodians</literal> method to return the list of principals that are currently defined as custodians for the cycles wallet.</simpara>
<simpara>To list the custodians for a cycles wallet in a local project:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Open a terminal and navigate to the root directory of the project.</simpara>
</listitem>
<listitem>
<simpara>Start the Internet Computer locally by running the following command:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx start --background</programlisting>
</listitem>
<listitem>
<simpara>List the principal identifiers that have the custodian role for the cycles wallet in the current project by running the following command:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx wallet custodians</programlisting>
<simpara>The command displays output similar to the following:</simpara>
<literallayout class="monospaced">tsqwz-udeik-5migd-ehrev-pvoqv-szx2g-akh5s-fkyqc-zy6q7-snav6-uqe
b5quc-npdph-l6qp4-kur4u-oxljq-7uddl-vfdo6-x2uo5-6y4a6-4pt6v-7qe</literallayout>
</listitem>
</orderedlist>
</section>
<section xml:id="wallet-deauthorize">
<title>Remove authorization for a custodian</title>
<simpara>You can use the <literal>dfx wallet deauthorize</literal> command or the <literal>deauthorize</literal> method to remove a principal as a custodian for a cycles wallet.
De-authorizing a principal that was previously added as a controller also automatically removes the principal from the controller role.</simpara>
<simpara>To remove a custodian for a cycles wallet in a local project:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Open a terminal and navigate to the root directory of the project.</simpara>
</listitem>
<listitem>
<simpara>Start the Internet Computer locally by running the following command:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx start --background</programlisting>
</listitem>
<listitem>
<simpara>Specify the principal identifier to remove from the custodian role in the current project by running a command similar to the following:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx wallet deauthorize b5quc-npdph-l6qp4-kur4u-oxljq-7uddl-vfdo6-x2uo5-6y4a6-4pt6v-7qe</programlisting>
<simpara>The command output similar to the following:</simpara>
<literallayout class="monospaced">Deauthorized b5quc-npdph-l6qp4-kur4u-oxljq-7uddl-vfdo6-x2uo5-6y4a6-4pt6v-7qe as a custodian.</literallayout>
</listitem>
</orderedlist>
</section>
<section xml:id="wallet-send">
<title>Send cycles to a canister</title>
<simpara>You can use <literal>dfx wallet send</literal> command of the <literal>wallet_send</literal> method to send a specific number of cycles to a specific canister.
Keep in mind that the canister you specify must be a cycles wallet or have a <literal>wallet_receive</literal> method to accept the cycles.</simpara>
<simpara>If you have deployed a cycles wallet on the Internet Computer main network, you can use the  <literal>dfx wallet send</literal> command to send cycles between canisters running on the network.</simpara>
<simpara>To send cycles to another canister running on the Internet Computer:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Open a terminal and navigate to a directory that contains a <literal>dfx.json</literal> configuration file.</simpara>
</listitem>
<listitem>
<simpara>Check your connection to the Internet Computer by running the following command:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx ping ic</programlisting>
</listitem>
<listitem>
<simpara>Get the canister identifier for the canister that you want to receive the cycles.</simpara>
<simpara>For example, run the following command to display the cycles wallet identifier associated with the current user identity on the Internet Computer:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx identity --network ic get-wallet</programlisting>
<simpara>The command displays the cycles wallet canister identifier with output similar to the following:</simpara>
<literallayout class="monospaced">gastn-uqaaa-aaaae-aaafq-cai</literallayout>
</listitem>
<listitem>
<simpara>Send cycles to the canister identifier by running a command similar to the following:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx wallet --network ic send &lt;destination&gt; &lt;amount&gt;</programlisting>
<simpara>For example:</simpara>
<literallayout class="monospaced">dfx wallet --network ic send gastn-uqaaa-aaaae-aaafq-cai 10000000000</literallayout>
<simpara>If the transfer is successful, the command does not displays any output.</simpara>
<note>
<simpara>The maximum number of cycles that can be stored in a cycles wallet is
two to the power of sixty-four (2<superscript>64</superscript> or 18,446,744,073,709,551,616 cycles).</simpara>
</note>
</listitem>
<listitem>
<simpara>Check the cycles wallet balance to see the updated number of cycles available by running the following command:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx wallet --network ic balance</programlisting>
<simpara>For example:</simpara>
<literallayout class="monospaced">67991699387090 cycles.</literallayout>
</listitem>
</orderedlist>
</section>
<section xml:id="_list_address_book_entries">
<title>List address book entries</title>
<simpara>You can use the <literal>dfx wallet addresses</literal> command or the <literal>list_addresses</literal> method to list the principal identifiers and roles that have been configured for the cycles wallet.</simpara>
<simpara>To view address book entries for a cycles wallet running on the Internet Computer:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Open a terminal and navigate to a directory that contains a <literal>dfx.json</literal> configuration file.</simpara>
</listitem>
<listitem>
<simpara>Check your connection to the Internet Computer by running the following command:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx ping ic</programlisting>
</listitem>
<listitem>
<simpara>Get the address book entries for the cycles wallet by running the following command :</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx wallet --network ic addresses</programlisting>
<simpara>The command displays the controllers and custodians for the cycles wallet with output similar to the following:</simpara>
<literallayout class="monospaced">Id: tsqwz-udeik-5migd-ehrev-pvoqv-szx2g-akh5s-fkyqc-zy6q7-snav6-uqe, Kind: Unknown, Role: Controller, Name: No name set.
Id: ejta3-neil3-qek6c-i7rdw-sxreh-lypfe-v6hjg-6so7x-5ugze-3iohr-2qe, Kind: Unknown, Role: Custodian, Name: No name set.
Id: b5quc-npdph-l6qp4-kur4u-oxljq-7uddl-vfdo6-x2uo5-6y4a6-4pt6v-7qe, Kind: Unknown, Role: Controller, Name: No name set.</literallayout>
</listitem>
</orderedlist>
</section>
<section xml:id="_additional_methods_in_the_default_cycles_wallet">
<title>Additional methods in the default cycles wallet</title>
<simpara>The default cycles wallet canister includes additonal methods that are not exposed as <literal>dfx wallet</literal> commands.
The additional methods support more advanced cycles management tasks such as creating new canisters and managing events.</simpara>
<section xml:id="wallet-create-wallets">
<title>Create a new cycles wallet</title>
<simpara>Use the <literal>wallet_create_wallet</literal> method to create a new cycles wallet canister with an initial cycle balance and, optionally, with a specific principal as its controller.
If you don&#8217;t specify a controlling principal, the cycles wallet you use to create the new wallet will be the new wallet&#8217;s controller.</simpara>
<simpara>For example, you can run a command similar to the following to create a new wallet and assign a principal as a controller:</simpara>
<literallayout class="monospaced">dfx canister --network  call f3yw6-7qaaa-aaaab-qaabq-cai wallet_create_wallet '(record { cycles = 5000000000000 : nat64; controller = principal "vpqee-nujda-46rtu-4noo7-qnxmb-zqs7g-5gvqf-4gy7t-vuprx-u2urx-gqe"})'</literallayout>
<simpara>The command returns the principal for the new wallet:</simpara>
<literallayout class="monospaced">(record { 1_313_628_723 = principal "dcxxq-jqaaa-aaaab-qaavq-cai" })</literallayout>
</section>
<section xml:id="wallet-create-canister">
<title>Register a new canister identifier</title>
<simpara>Use the <literal>wallet_create_canister</literal> method to register a new canister identifier on the Internet Computer.
This method creates a new "empty" canister placeholder with an initial cycle balance and, optionally, with a specific principal as its controller.
After you have registered the canister identifier, you can install code for your application as a separate step.</simpara>
<simpara>For example, you can run a command similar to the following to create a new wallet and assign a principal as a controller:</simpara>
<literallayout class="monospaced">dfx canister --network  call f3yw6-7qaaa-aaaab-qaabq-cai wallet_create_canister '(record { cycles = 5000000000000 : nat64; controller = principal "vpqee-nujda-46rtu-4noo7-qnxmb-zqs7g-5gvqf-4gy7t-vuprx-u2urx-gqe"})'</literallayout>
<simpara>The command returns the principal for the new canister you created:</simpara>
<literallayout class="monospaced">(record { 1_313_628_723 = principal "dxqg5-iyaaa-aaaab-qaawa-cai" })</literallayout>
</section>
<section xml:id="wallet-receive">
<title>Receive cycles from a canister</title>
<simpara>Use the <literal>wallet_receive</literal> method as an endpoint to receive cycles.</simpara>
</section>
<section xml:id="wallet-call">
<title>Forward calls from a wallet</title>
<simpara>Use the <literal>wallet_call</literal> method to forward calls using the cycles wallet identifier.</simpara>
</section>
<section xml:id="wallet-addresses">
<title>Manage addresses</title>
<simpara>Use the following methods to manage address book entries:</simpara>
<itemizedlist>
<listitem>
<simpara><literal>add_address</literal>: (address: AddressEntry) &#8594; ();</simpara>
</listitem>
<listitem>
<simpara><literal>remove_address</literal>: (address: principal) &#8594; ();</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="events">
<title>Manage events</title>
<simpara>Use the following methods to retrieve event and chart information.</simpara>
<itemizedlist>
<listitem>
<simpara><literal>get_events</literal>: (opt record { from: opt nat32; to: opt nat32; }) &#8594; (vec Event) query;</simpara>
</listitem>
<listitem>
<simpara><literal>get_chart</literal>: (opt record { count: opt nat32; precision: opt nat64; } ) &#8594; (vec record { nat64; nat64; }) query;</simpara>
</listitem>
</itemizedlist>
<simpara>For example, you can use the <literal>get_events</literal> method to return <literal>canister_create</literal> and other events by running a command similar to the following:</simpara>
<programlisting language="bash" linenumbering="unnumbered">dfx canister call &lt;cycles-wallet-identifier&gt; get_events '(record {from = null; to = null})'</programlisting>
<simpara>If the cycles wallet (<literal>gastn-uqaaa-aaaae-aaafq-cai</literal>) is deployed on the Internet Computer main network, you could run a command that looks like this to return events:</simpara>
<literallayout class="monospaced">dfx canister --network ic call gastn-uqaaa-aaaae-aaafq-cai get_events '(record {from = null; to = null})'</literallayout>
<simpara>The output from the command is in Candid format similar to the following:</simpara>
<literallayout class="monospaced">(
  vec { record { 23_515 = 0; 1_191_829_844 = variant { 4_271_600_268 = record { 23_515 = principal "tsqwz-udeik-5migd-ehrev-pvoqv-szx2g-akh5s-fkyqc-zy6q7-snav6-uqe"; 1_224_700_491 = null; 1_269_754_742 = variant { 4_218_395_836 };} }; 2_781_795_542 = 1_621_456_688_636_513_683;}; record { 23_515 = 1; 1_191_829_844 = variant { 4_271_600_268 = record { 23_515 = principal "ejta3-neil3-qek6c-i7rdw-sxreh-lypfe-v6hjg-6so7x-5ugze-3iohr-2qe"; 1_224_700_491 = null; 1_269_754_742 = variant { 2_494_206_670 };} }; 2_781_795_542 = 1_621_461_468_638_569_551;}; record { 23_515 = 2; 1_191_829_844 = variant { 1_205_528_161 = record { 2_190_693_645 = 11_000_000_000_000; 2_631_180_839 = principal "gvvca-vyaaa-aaaae-aaaga-cai";} }; 2_781_795_542 = 1_621_462_573_993_647_258;}; record { 23_515 = 3; 1_191_829_844 = variant { 1_205_528_161 = record { 2_190_693_645 = 11_000_000_000_000; 2_631_180_839 = principal "gsueu-yaaaa-aaaae-aaagq-cai";} }; 2_781_795_542 = 1_621_462_579_193_578_440;}; record { 23_515 = 4; 1_191_829_844 = variant { 1_955_698_212 = record { 2_190_693_645 = 0; 2_374_371_241 = "install_code"; 2_631_180_839 = principal "aaaaa-aa";} }; 2_781_795_542 = 1_621_462_593_047_590_026;}; record { 23_515 = 5; 1_191_829_844 = variant { 1_955_698_212 = record { 2_190_693_645 = 0; 2_374_371_241 = "install_code"; 2_631_180_839 = principal "aaaaa-aa";} }; 2_781_795_542 = 1_621_462_605_779_157_885;}; record { 23_515 = 6; 1_191_829_844 = variant { 1_955_698_212 = record { 2_190_693_645 = 0; 2_374_371_241 = "authorize"; 2_631_180_839 = principal "gsueu-yaaaa-aaaae-aaagq-cai";} }; 2_781_795_542 = 1_621_462_609_036_146_536;}; record { 23_515 = 7; 1_191_829_844 = variant { 1_955_698_212 = record { 2_190_693_645 = 0; 2_374_371_241 = "greet"; 2_631_180_839 = principal "gvvca-vyaaa-aaaae-aaaga-cai";} }; 2_781_795_542 = 1_621_463_144_066_333_270;}; record { 23_515 = 8; 1_191_829_844 = variant { 4_271_600_268 = record { 23_515 = principal "ejta3-neil3-qek6c-i7rdw-sxreh-lypfe-v6hjg-6so7x-5ugze-3iohr-2qe"; 1_224_700_491 = null; 1_269_754_742 = variant { 2_494_206_670 };} }; 2_781_795_542 = 1_621_463_212_828_477_570;}; record { 23_515 = 9; 1_191_829_844 = variant { 1_955_698_212 = record { 2_190_693_645 = 0; 2_374_371_241 = "wallet_balance"; 2_631_180_839 = principal "gastn-uqaaa-aaaae-aaafq-cai";} }; 2_781_795_542 = 1_621_878_637_071_884_946;}; record { 23_515 = 10; 1_191_829_844 = variant { 4_271_600_268 = record { 23_515 = principal "b5quc-npdph-l6qp4-kur4u-oxljq-7uddl-vfdo6-x2uo5-6y4a6-4pt6v-7qe"; 1_224_700_491 = null; 1_269_754_742 = variant { 4_218_395_836 };} }; 2_781_795_542 = 1_621_879_473_916_547_313;}; record { 23_515 = 11; 1_191_829_844 = variant { 313_999_214 = record { 1_136_829_802 = principal "gastn-uqaaa-aaaae-aaafq-cai"; 3_573_748_184 = 10_000_000_000;} }; 2_781_795_542 = 1_621_977_470_023_492_664;}; record { 23_515 = 12; 1_191_829_844 = variant { 2_171_739_429 = record { 25_979 = principal "gastn-uqaaa-aaaae-aaafq-cai"; 3_573_748_184 = 10_000_000_000; 4_293_698_680 = 0;} }; 2_781_795_542 = 1_621_977_470_858_839_320;};},
)</literallayout>
<simpara>In this example, there are twelve event records. The Role field (represented by the hash <literal>1_269_754_742</literal>) specifies whether a principal is a controller (represented by the hash <literal>4_218_395_836</literal>) or a custodian (represented by the hash <literal>2_494_206_670</literal>). The events in this example also illustrate an amount field (represented by the hash <literal>3_573_748_184</literal>) with a transfer of 10,000,000,000 cycles.</simpara>
</section>
</section>
</article>